/* Flow Editor styles */

/* Node execution states */
.executing-node {
  box-shadow: 0 0 10px rgba(255, 165, 0, 0.8);
  border-color: orange !important;
}

.completed-node {
  box-shadow: 0 0 10px rgba(0, 255, 0, 0.5);
  border-color: green !important;
}

.error-node {
  box-shadow: 0 0 10px rgba(255, 0, 0, 0.8);
  border-color: red !important;
}

/* Custom styling for React Flow elements */
.react-flow__node {
  /* Remove transition for smoother dragging */
}

.react-flow__node:hover {
  /* Remove transform for smoother dragging */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

/* Connection line styles */
.react-flow__edge-path {
  stroke-width: 2;
}

/* Execution paths - thicker lines for execution flow */
.react-flow__edge.execution-edge .react-flow__edge-path {
  stroke-width: 2;
  stroke: #ffffff;
  stroke-dasharray: 5, 5;
}

/* Data paths - different style for data flow */
.react-flow__edge.data-edge .react-flow__edge-path {
  stroke-width: 2;
  stroke: #A78BFA;
  stroke-dasharray: none;
}

/* Selected edge styling */
.react-flow__edge.selected .react-flow__edge-path {
  stroke: #F56565 !important;
  stroke-width: 3 !important;
  filter: drop-shadow(0 0 5px rgba(245, 101, 101, 0.5));
}

/* Improve edge interaction - wider interaction path */
.react-flow__edge-interaction {
  cursor: pointer;
}

/* Animated edges */
.react-flow__edge-path.animated {
  stroke-dasharray: 5;
  animation: dashdraw 0.5s linear infinite;
}

@keyframes dashdraw {
  from {
    stroke-dashoffset: 10;
  }
}

/* Hover effect for edges */
.react-flow__edge:hover .react-flow__edge-path {
  stroke-width: 3;
  filter: brightness(1.2);
}

/* Pin styles */
.execution-pin {
  background-color: transparent;
  /* border: 2px solid transparent;*/
}

/* Base data pin styles */
.input-pin,
.output-pin {
  background-color: transparent;
}

/* Data type specific colors */
.string-data-pin {
  background-color: transparent;
  /* border: 2px solid transparent;*/
}

.number-data-pin {
  background-color: transparent;
  /* border: 2px solid transparent;*/
}

.boolean-data-pin {
  background-color: transparent;
  /* border: 2px solid transparent;*/
}

.object-data-pin {
  background-color: transparent;
  /* border: 2px solid transparent;*/
}

.array-data-pin {
  background-color: transparent;
  /* border: 2px solid transparent;*/
}

/* Type conversion node styles */
.type-conversion-node {
  background-color: transparent;
  /* border-color: transparent;*/
}

/* Fix positioning for controls in light and dark themes */
.theme-light .flow-controls,
.theme-dark .flow-controls {
  top: calc(var(--header-height) + 8px) !important; /* Use CSS variable + small gap */
}

/* Fix positioning for NodeCreationMenu in light and dark themes */
.theme-light .api-flow-editor .node-creation-menu,
.theme-dark .api-flow-editor .node-creation-menu {
  top: calc(var(--header-height) + 8px) !important; /* Use CSS variable + small gap */
}

/* Default positioning for controls in all themes */
.flow-controls {
  top: 16px; /* Default top position */
}

.node-creation-menu {
  top: 16px; /* Default top position */
}

/* Fix for NodeCreationMenu buttons width and text wrapping in the collapsed state */
.node-creation-menu .flex.space-x-2 button {
  white-space: nowrap; /* Prevent text wrapping */
  min-width: auto; /* Let buttons size based on content */
  width: auto; /* Allow buttons to expand as needed */
  display: inline-block; /* Ensure proper display */
  text-align: center; /* Center button text */
  overflow: visible; /* Ensure text doesn't get clipped */
}

/* Ensure specific button widths for add node buttons in collapsed state */
.node-creation-menu .flex.space-x-2 button:nth-child(1) {
  min-width: 120px; /* Set minimum width for 'Add REST API Node' */
}

.node-creation-menu .flex.space-x-2 button:nth-child(2) {
  min-width: 120px; /* Set minimum width for 'Add App API Node' */
}

.node-creation-menu .flex.space-x-2 button:nth-child(3) {
  min-width: 110px; /* Set minimum width for 'Add Primitive' */
}

/* Fix for expanded menu width */
.node-creation-menu > div.p-4 {
  width: 256px !important; /* Override any constraints with important */
  min-width: 256px !important; /* Ensure minimum width */
}

/* Ensure the collapsed state menu row has proper spacing and alignment */
.node-creation-menu .flex.space-x-2 {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  width: auto;
  min-width: 380px; /* Ensure enough width for all three buttons */
}

/* Fix for BeOS theme - no adjustment needed as header is separate */
.theme-beos .flow-controls,
.theme-beos .api-flow-editor .node-creation-menu {
  /* Default positioning works fine for BeOS theme */
  top: 16px; /* Default top position */
}

/* Make sure MiniMap is visible */
.react-flow__minimap {
  position: absolute !important;
  bottom: 20px !important;
  right: 20px !important;
  background-color: #2D3748;
  border: 1px solid #4A5568;
  border-radius: 6px;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  z-index: 5;
}

/* Style controls position */
.react-flow__controls {
  position: absolute !important;
  bottom: 20px !important;
  left: 20px !important;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  z-index: 5;
}

/* Fixed position container for MiniMap */
.fixed-minimap {
  position: absolute;
  bottom: 20px;
  right: 20px;
  z-index: 10;
  pointer-events: auto;
}

/* Fixed position container for Controls */
.fixed-controls {
  position: absolute;
  bottom: 20px;
  left: 20px;
  z-index: 10;
  pointer-events: auto;
}

/* Flow container to ensure proper positioning */
.flow-container {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 100%;
}

/* Controls wrapper styles */
.controls-wrapper {
  position: absolute;
  bottom: 16px;
  left: 16px;
  z-index: 20;
  pointer-events: auto;
}

/* MiniMap wrapper styles */
.minimap-wrapper {
  position: absolute;
  bottom: 16px;
  right: 16px;
  z-index: 20;
  pointer-events: auto;
}

/* Style for the controls themselves */
.controls-wrapper .react-flow__controls {
  background-color: #2D3748;
  border: 1px solid #4A5568;
  border-radius: 6px;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

/* Style for the minimap itself */
.minimap-wrapper .react-flow__minimap {
  background-color: #2D3748;
  border: 1px solid #4A5568;
  border-radius: 6px;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  width: 200px;
  height: 120px;
}

/* Make sure React Flow doesn't hide our components */
.react-flow__renderer {
  z-index: 1;
}

/* Main API flow editor container to ensure proper sizing */
.api-flow-editor {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
