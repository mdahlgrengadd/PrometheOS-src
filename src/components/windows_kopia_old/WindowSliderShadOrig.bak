import * as React from "react";

import { cn } from "@/lib/utils";
import * as SliderPrimitive from "@radix-ui/react-slider";

export type WindowSliderProps = React.ComponentPropsWithoutRef<
  typeof SliderPrimitive.Root
>;

export const WindowSlider = React.forwardRef<
  React.ElementRef<typeof SliderPrimitive.Root>,
  WindowSliderProps
>(
  (
    { className, orientation = "horizontal", defaultValue, value, ...props },
    ref
  ) => {
    // ensure Radix always sees an array
    const _defaultValue =
      defaultValue === undefined
        ? undefined
        : Array.isArray(defaultValue)
        ? defaultValue
        : [defaultValue];
    const _value =
      value === undefined ? undefined : Array.isArray(value) ? value : [value];

    return (
      <SliderPrimitive.Root
        ref={ref}
        orientation={orientation}
        defaultValue={_defaultValue}
        value={_value}
        className={cn(
          "relative flex touch-none select-none items-center",
          className,
          orientation === "vertical" ? "flex-col h-24 w-5" : "w-full h-5"
        )}
        {...props}
      >
        <SliderPrimitive.Track
          className={cn(
            "relative grow overflow-hidden rounded-full bg-primary/20",
            orientation === "vertical" ? "h-full w-[3px]" : "h-1.5 w-full"
          )}
        >
          <SliderPrimitive.Range
            className={cn(
              "absolute bg-primary",
              orientation === "vertical" ? "w-full" : "h-full"
            )}
          />
        </SliderPrimitive.Track>
        <SliderPrimitive.Thumb
          className="block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors 
                     focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring 
                     disabled:pointer-events-none disabled:opacity-50"
        />
      </SliderPrimitive.Root>
    );
  }
);
WindowSlider.displayName = SliderPrimitive.Root.displayName;
